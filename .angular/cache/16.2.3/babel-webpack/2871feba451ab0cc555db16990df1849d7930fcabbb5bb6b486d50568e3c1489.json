{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass DataService {\n  constructor() {\n    this.messages = [{\n      fromName: 'Matt Chorsey',\n      subject: 'New event: Trip to Vegas',\n      date: '9:32 AM',\n      id: 0,\n      read: false\n    }, {\n      fromName: 'Lauren Ruthford',\n      subject: 'Long time no chat',\n      date: '6:12 AM',\n      id: 1,\n      read: false\n    }, {\n      fromName: 'Jordan Firth',\n      subject: 'Report Results',\n      date: '4:55 AM',\n      id: 2,\n      read: false\n    }, {\n      fromName: 'Bill Thomas',\n      subject: 'The situation',\n      date: 'Yesterday',\n      id: 3,\n      read: false\n    }, {\n      fromName: 'Joanne Pollan',\n      subject: 'Updated invitation: Swim lessons',\n      date: 'Yesterday',\n      id: 4,\n      read: false\n    }, {\n      fromName: 'Andrea Cornerston',\n      subject: 'Last minute ask',\n      date: 'Yesterday',\n      id: 5,\n      read: false\n    }, {\n      fromName: 'Moe Chamont',\n      subject: 'Family Calendar - Version 1',\n      date: 'Last Week',\n      id: 6,\n      read: false\n    }, {\n      fromName: 'Kelly Richardson',\n      subject: 'Placeholder Headhots',\n      date: 'Last Week',\n      id: 7,\n      read: false\n    }];\n  }\n  getMessages() {\n    return this.messages;\n  }\n  getMessageById(id) {\n    return this.messages[id];\n  }\n}\n_class = DataService;\n_class.ɵfac = function DataService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { DataService };","map":{"version":3,"names":["DataService","constructor","messages","fromName","subject","date","id","read","getMessages","getMessageById","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Munib\\Desktop\\ionic-angular-course\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nexport interface Message {\n  fromName: string;\n  subject: string;\n  date: string;\n  id: number;\n  read: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public messages: Message[] = [\n    {\n      fromName: 'Matt Chorsey',\n      subject: 'New event: Trip to Vegas',\n      date: '9:32 AM',\n      id: 0,\n      read: false\n    },\n    {\n      fromName: 'Lauren Ruthford',\n      subject: 'Long time no chat',\n      date: '6:12 AM',\n      id: 1,\n      read: false\n    },\n    {\n      fromName: 'Jordan Firth',\n      subject: 'Report Results',\n      date: '4:55 AM',\n      id: 2,\n      read: false\n    },\n    {\n      fromName: 'Bill Thomas',\n      subject: 'The situation',\n      date: 'Yesterday',\n      id: 3,\n      read: false\n    },\n    {\n      fromName: 'Joanne Pollan',\n      subject: 'Updated invitation: Swim lessons',\n      date: 'Yesterday',\n      id: 4,\n      read: false\n    },\n    {\n      fromName: 'Andrea Cornerston',\n      subject: 'Last minute ask',\n      date: 'Yesterday',\n      id: 5,\n      read: false\n    },\n    {\n      fromName: 'Moe Chamont',\n      subject: 'Family Calendar - Version 1',\n      date: 'Last Week',\n      id: 6,\n      read: false\n    },\n    {\n      fromName: 'Kelly Richardson',\n      subject: 'Placeholder Headhots',\n      date: 'Last Week',\n      id: 7,\n      read: false\n    }\n  ];\n\n  constructor() { }\n\n  public getMessages(): Message[] {\n    return this.messages;\n  }\n\n  public getMessageById(id: number): Message {\n    return this.messages[id];\n  }\n}\n"],"mappings":";;AAUA,MAGaA,WAAW;EA4DtBC,YAAA;IA3DO,KAAAC,QAAQ,GAAc,CAC3B;MACEC,QAAQ,EAAE,cAAc;MACxBC,OAAO,EAAE,0BAA0B;MACnCC,IAAI,EAAE,SAAS;MACfC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,EACD;MACEJ,QAAQ,EAAE,iBAAiB;MAC3BC,OAAO,EAAE,mBAAmB;MAC5BC,IAAI,EAAE,SAAS;MACfC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,EACD;MACEJ,QAAQ,EAAE,cAAc;MACxBC,OAAO,EAAE,gBAAgB;MACzBC,IAAI,EAAE,SAAS;MACfC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,EACD;MACEJ,QAAQ,EAAE,aAAa;MACvBC,OAAO,EAAE,eAAe;MACxBC,IAAI,EAAE,WAAW;MACjBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,EACD;MACEJ,QAAQ,EAAE,eAAe;MACzBC,OAAO,EAAE,kCAAkC;MAC3CC,IAAI,EAAE,WAAW;MACjBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,EACD;MACEJ,QAAQ,EAAE,mBAAmB;MAC7BC,OAAO,EAAE,iBAAiB;MAC1BC,IAAI,EAAE,WAAW;MACjBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,EACD;MACEJ,QAAQ,EAAE,aAAa;MACvBC,OAAO,EAAE,6BAA6B;MACtCC,IAAI,EAAE,WAAW;MACjBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,EACD;MACEJ,QAAQ,EAAE,kBAAkB;MAC5BC,OAAO,EAAE,sBAAsB;MAC/BC,IAAI,EAAE,WAAW;MACjBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP,CACF;EAEe;EAETC,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACN,QAAQ;EACtB;EAEOO,cAAcA,CAACH,EAAU;IAC9B,OAAO,IAAI,CAACJ,QAAQ,CAACI,EAAE,CAAC;EAC1B;;SApEWN,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAU,OAAA,EAAXV,MAAW,CAAAW,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}